--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 5.00.772
--   Created On : Tuesday, 18 July, 2006 
--   DBMS       : MySql 
--   -------------------------------------------------- 

USE lsst ;


--  Drop Tables 
DROP TABLE IF EXISTS AlgRun ;
DROP TABLE IF EXISTS APO2_5mWCS ;
DROP TABLE IF EXISTS DaophotPSFModel ;
DROP TABLE IF EXISTS DophotPSFModel ;
DROP TABLE IF EXISTS Image ;
DROP TABLE IF EXISTS MSO50inWCS ;
DROP TABLE IF EXISTS NOAO4mWCS ;
DROP TABLE IF EXISTS Object ;
DROP TABLE IF EXISTS PhotoPSFModel ;
DROP TABLE IF EXISTS PipelineRun ;
DROP TABLE IF EXISTS TangentWCS ;
DROP TABLE IF EXISTS TieClusterToObject ;
DROP TABLE IF EXISTS TieImageToAlgRun ;

--  Create Tables 
CREATE TABLE AlgRun
(
	AlgRunID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'ID of this run of this algorithm',
	PipelineRunID BIGINT COMMENT 'PipelineRunID for the pipeline that executed this run of this algorithm. Null if the algorithm is run independently of a pipeline.',
	AlgIndex SMALLINT COMMENT 'Index of algorithm within the run of the pipeline, starting from 0',
	AlgName VARCHAR(50) COMMENT 'Name of algorithm, one of Photo, DAOPhot, etc. To find the corresponding algorithm parameter table, append "Alg" to the name.',
	AlgVersion VARCHAR(50) COMMENT 'Version of algorithm.',
	StartDate DATETIME COMMENT 'Starting UTC date and time.',
	Comments VARCHAR(255) COMMENT 'Comments about the algorithm run',
	CmdLine VARCHAR(255) COMMENT 'Command line used to execute algorithm.',
	Params1 TEXT COMMENT 'Parameters used to execute algorithm (i.e. a copy of the params file).',
	Params2 TEXT COMMENT 'A second set of parameters used to execute algorithm, if any',
	Params3 TEXT COMMENT 'A third set of parameters used to execute algorithm, if any',
	ParamTable1 VARCHAR(50) COMMENT 'Name of parameter table, if any.',
	ParamTable2 VARCHAR(50) COMMENT 'Name of second parameter table, if any.',
	ParamTable3 VARCHAR(50) COMMENT 'Name of third parameter table, if any.',
	Computer VARCHAR(255) COMMENT 'Name of computer(s) on which the algorithm was run. If more than one, comma-separated.',
	Processor VARCHAR(255) COMMENT 'CPU info about the computer(s).',
	OS VARCHAR(255) COMMENT 'Operating systems(s) on the computer(s).',
	NImages BIGINT COMMENT 'Number of images processed by this algorithm. If images are both input and output, use input.',
	ImSize FLOAT(0) COMMENT 'Size of image processed by this algorithm (Mb). If images are both input and output, use input. If more than one size of image is processed, specify the average.',
	NObjects BIGINT COMMENT 'Number of objects (detections) input or output. If objects are input and output, then specify the number input.',
	ElapsedSec FLOAT(0) COMMENT 'Elapsed clock time (seconds) to execute the algorithm.',
	IngestSec FLOAT(0) COMMENT 'Time required to ingest the data (sec).',
	CPUCycles FLOAT(0) COMMENT 'Number of cpu cycles used to execute the algorithm.',
	CPUCyclesErr FLOAT(0) COMMENT 'Estimated std. dev. of CPUCycles',
	Memory FLOAT(0) COMMENT 'Total memory used to process the data (Mb)',
	MemoryErr FLOAT(0) COMMENT 'Uncertainty in measure of memory (Mb)',
	InList MEDIUMTEXT COMMENT 'List of files input to the algorithm.',
	OutList MEDIUMTEXT COMMENT 'List of files successfully processed by the algorithm (possibly with errors; see ErrList for that info).',
	ErrList MEDIUMTEXT COMMENT 'List of files for which non-fatal errors occured, and the associated errors.',
	NoSuccess MEDIUMTEXT COMMENT 'List of files for which fatal errors occurred. These files do not appear in OutList.',
	Log MEDIUMTEXT COMMENT 'Log from photpipe''s running of this algorithm.',
	ProcList MEDIUMTEXT COMMENT 'List of files processed with start date and elapsed time.',
	PRIMARY KEY (AlgRunID),
	UNIQUE (AlgRunID),
	KEY (PipelineRunID)
) Type=InnoDB COMMENT='Information about one run of one algorithm.' ;


CREATE TABLE APO2_5mWCS
(
	ImageID BIGINT NOT NULL COMMENT 'Each Image has a WCS in this table which can be tracked using the ImageID.  ',
	Filter CHAR(1) COMMENT 'One of u g r i z',
	Node DOUBLE,
	Incl DOUBLE COMMENT 'Inclination of scan',
	A DOUBLE,
	B DOUBLE,
	C DOUBLE,
	D DOUBLE,
	E DOUBLE,
	F DOUBLE,
	DRow0 DOUBLE,
	DRow1 DOUBLE,
	DRow2 DOUBLE,
	DRow3 DOUBLE,
	DCol0 DOUBLE,
	DCol1 DOUBLE,
	DCol2 DOUBLE,
	DCol3 DOUBLE,
	CSRow DOUBLE,
	CSCol DOUBLE,
	CCRow DOUBLE,
	CCCol DOUBLE,
	RICut DOUBLE,
	MJD DOUBLE COMMENT 'TAI (in MJD seconds) of readout of row 0. Note that is a different time than TAI in the Image table.',
	Airmass DOUBLE COMMENT 'Airmass at center of frame.',
	MuErr DOUBLE,
	NuErr DOUBLE,
	KEY (ImageID)
) Type=InnoDB COMMENT='This table holds all of the information associated with each WCS model for SDSS images.  Each SDSS image will have a unique WCS model.  The WCS is for the Sloan Digital Sky Survey (I and II) 2.5m telescope setup at the Apache Point Observatory, New Mexico.  The parameters in this table come from the asTrans.par file for PHOTO.' ;


CREATE TABLE DaophotPSFModel
(
	ImageAlgRunID BIGINT NOT NULL,
	PSFData MEDIUMTEXT COMMENT 'Contents of psf file generated by DAOPhot',
	UNIQUE (ImageAlgRunID),
	KEY (ImageAlgRunID)
) Type=InnoDB COMMENT='PSF model used by the daophot algorithm on a particular run on a particular image.' ;


CREATE TABLE DophotPSFModel
(
	ImageAlgRunID BIGINT NOT NULL,
	sigma_x FLOAT(0) COMMENT 'PSF shape parameter.',
	sigma_y FLOAT(0) COMMENT 'PSF shape parameter.',
	sigma_xy FLOAT(0) COMMENT 'PSF shape parameter.',
	UNIQUE (ImageAlgRunID),
	KEY (ImageAlgRunID)
) Type=InnoDB COMMENT='PSF model used by dophoto for a particular run on a particular image.' ;


CREATE TABLE Image
(
	ImageID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Unique identification number of the information from each Image header.',
	ImageName VARCHAR(255) NOT NULL COMMENT 'The LSST formatted file name, as an absolute path.',
	Filter VARCHAR(50) NOT NULL COMMENT 'Filter designation for the FitsImage.',
	Amp TINYINT NOT NULL COMMENT 'The amplifier number for the SuperMACHO FitsImages.',
	CCD TINYINT NOT NULL COMMENT 'The CCD number for the SuperMACHO FitsImages.',
	Field VARCHAR(50) NOT NULL COMMENT 'Name of the field. The meaning depends on the data source. For SDSS this is the Frame. For SuperMACHO this is the Field.',
	Run MEDIUMINT COMMENT 'Run number from SDSS images.',
	ReRun MEDIUMINT COMMENT 'The rerun number for SDSS images.',
	CamCol TINYINT COMMENT 'The camcol number for the SDSS FitsImages.',
	Airmass FLOAT(0) NOT NULL COMMENT 'The airmass of the observation. If possible, this should be at the center of the field and at the middle of the exposure time, but this is not guaranteed.',
	TAI DOUBLE NOT NULL COMMENT 'TAI (MJD) date of the observation (time at center of integration). For drift-scan data, this is the time for row 0. The TAI of row r is given by TAI + RowTime * r * days/sec.  This works for all images because; RowTime is 0 for non-drift-scanned images.',
	UT1 DOUBLE COMMENT 'UT1 (MJD) date of observation (time at center of integration). For drift-scan data, this is the time for row 0. Null if unknown.',
	MJD MEDIUMINT COMMENT 'MJD day (TAI or UTC) of the beginning of the night',
	ExpTime DOUBLE NOT NULL COMMENT 'Exposure time of the observation (in TAI seconds).',
	RowTime DOUBLE NOT NULL COMMENT 'The time between each row for drift-scanned data (in TAI seconds). 0 for non-drift-scanned data.',
	DataSource VARCHAR(50) NOT NULL COMMENT 'The DataSource lists the survey name from which the test Images were obtained (SM: SuperMACHO, SDSS: Sloan Digital Sky Survey, W: Essence, etc.).  This is related to the WCS tables for each survey.',
	RawImageName VARCHAR(255) COMMENT 'Name of raw (uncalibrated) sky image.',
	MaskImageName VARCHAR(255) COMMENT 'The name of the Mask Image.',
	VarianceImageName VARCHAR(255) COMMENT 'Name of the Variance Image.',
	BiasImageName VARCHAR(255) COMMENT 'Name of the final Bias Image used to correct the science Image.',
	DarkImageName VARCHAR(255) COMMENT 'Name of the Dark Image used to correct the science Image.',
	FlatFieldName VARCHAR(255) COMMENT 'Name of the final flat field Image used to correct the science Image.',
	IllumImageName VARCHAR(255) COMMENT 'Name of the Illumination Correction Image used to correct the science Image.',
	FringeImageName VARCHAR(255) COMMENT 'Name of the Fringe Image used to correct the science Image.',
	UnremappedImageName VARCHAR(255) COMMENT 'Name of image from which this image was remapped',
	RemapType TINYINT NOT NULL COMMENT 'Type of remap performed, one of: 0: none, 1: Swarp, 2: WCSRemap',
	WCSTable VARCHAR(50) NOT NULL COMMENT 'Name of table containing WCS information for this image',
	HTMIDLL BIGINT NOT NULL COMMENT 'HTM ID corresponding to the LL corner of the data portion of the original science image area.  The HTM keeps track of the RA,DEC positions of these four corners to define the science Image area.',
	HTMIDLR BIGINT NOT NULL COMMENT 'HTM ID corresponding to the LR corner of the data portion of the original science image area.  The HTM keeps track of the RA,DEC positions of these four corners to define the science Image area.',
	HTMIDUL BIGINT NOT NULL COMMENT 'HTM ID corresponding to the UL corner of the data portion of the original science image area.  The HTM keeps track of the RA,DEC positions of these four corners to define the science Image area.',
	HTMIDUR BIGINT NOT NULL COMMENT 'HTM ID corresponding to the UR corner of the data portion of the original science image area.  The HTM keeps track of the RA,DEC positions of these four corners to define the science Image area.',
	BinX MEDIUMINT NOT NULL COMMENT 'Bin factor along x',
	BinY MEDIUMINT NOT NULL COMMENT 'Bin factor along y',
	SizeX MEDIUMINT NOT NULL COMMENT 'Size of the image in the x-direction (along rows) (binned pixels). Ignores overscan but includes regions that may be considered outside of the data portion of the image.',
	SizeY MEDIUMINT NOT NULL COMMENT 'Size of the image in the y-direction (along colums) (binned pixels). Ignores overscan but includes regions that may be considered outside of the data portion of the image.',
	Bias FLOAT(0) NOT NULL COMMENT 'Bias of the calibrated image (in ADUs).',
	ReadNoise FLOAT(0) COMMENT 'Read noise of the CCD (in e-).',
	Gain FLOAT(0) COMMENT 'Inverse gain of the CCD (in e-/ADU).',
	Az DOUBLE COMMENT 'Azimuth of observation (deg), preferably at center of exposure at center of image and including refraction correction, but none of this is guaranteed.',
	Alt DOUBLE COMMENT 'Altitude of observation (deg), preferably at center of exposure at center of image and including refraction correction, but none of this is guaranteed.',
	PRIMARY KEY (ImageID),
	UNIQUE (ImageID),
	UNIQUE (ImageName)
) Type=InnoDB COMMENT='This table holds all relevant information about a calibrated image.  Most of the information in this table is taken directly from the individual image headers. 
 Note: this table design assumes calibrated images. If you prefer to mix image types in a table such as this, consider changes such as these: - Add an ImageType field (presumably integer with a code for each type) - Change references to calibration sources (RawImageName, FlatFieldName, etc.) from image name to image ID and perhaps move them to a separate table that is only used for calibrated images.' ;


CREATE TABLE MSO50inWCS
(
	ImageID BIGINT NOT NULL COMMENT 'Each Image has a WCS in this table which can be tracked using the ImageID.  ',
	RADESYS VARCHAR(5) COMMENT 'RA/Dec coordinate system - either FK5 or ICRS.',
	Equinox FLOAT(0) COMMENT 'Date of equinox of coordinate system (if not ICRS)',
	CTYPE1 VARCHAR(50) COMMENT 'WCS projection type for this axis.',
	CUNIT VARCHAR(5) COMMENT 'Axis unit.',
	CRVAL1 DOUBLE COMMENT 'World coordinate on this axis.',
	CRPIX1 DOUBLE COMMENT 'Reference pixel on this axis.',
	CDELT1 DOUBLE COMMENT 'Pixel step along this axis.',
	CD1_1 DOUBLE COMMENT 'Linear projection matrix.',
	CD1_2 DOUBLE COMMENT 'Linear projection matrix.',
	CTYPE2 VARCHAR(50) COMMENT 'WCS projection type for this axis.',
	CUNIT2 VARCHAR(50) COMMENT 'Axis unit.',
	CRVAL2 DOUBLE COMMENT 'World coordinate on this axis.',
	CRPIX2 DOUBLE COMMENT 'Reference pixel on this axis.',
	CDELT2 DOUBLE COMMENT 'Pixel step along this axis.',
	CD2_1 DOUBLE COMMENT 'Linear projection matrix.',
	CD2_2 DOUBLE COMMENT 'Linear projection matrix.',
	KEY (ImageID)
) Type=InnoDB COMMENT='This table holds all of the information associated with each WCS model for MACHO images.  Each MACHO image will have a unique WCS model.  The WCS is for the 50in Great Melbourne Telescope at Mount Stromlo Observatory, Australia.' ;


CREATE TABLE NOAO4mWCS
(
	ImageID BIGINT NOT NULL COMMENT 'Each Image has a WCS in this table which can be tracked using the ImageID.  ',
	RADESYS VARCHAR(5) COMMENT 'RA/Dec coordinate system - either FK5 or ICRS.',
	Equinox FLOAT(0) COMMENT 'Date of equinox of coordinate system (if not ICRS)',
	CTYPE1 VARCHAR(50) COMMENT 'WCS projection type for this axis.',
	CUNIT VARCHAR(5) COMMENT 'Axis unit.',
	CRVAL1 DOUBLE COMMENT 'World coordinate on this axis.',
	CRPIX1 DOUBLE COMMENT 'Reference pixel on this axis.',
	CDELT1 DOUBLE COMMENT 'Pixel step along this axis.',
	CD1_1 DOUBLE COMMENT 'Linear projection matrix.',
	CD1_2 DOUBLE COMMENT 'Linear projection matrix.',
	CTYPE2 VARCHAR(255) COMMENT 'WCS projection type for this axis.',
	CUNIT2 VARCHAR(255) COMMENT 'Axis unit.',
	CRVAL2 DOUBLE COMMENT 'World coordinate on this axis.',
	CRPIX2 DOUBLE COMMENT 'Reference pixel on this axis.',
	CDELT2 DOUBLE COMMENT 'Pixel step along this axis.',
	CD2_1 DOUBLE COMMENT 'Linear projection matrix.',
	CD2_2 DOUBLE COMMENT 'Linear projection matrix.',
	WAT0_001 VARCHAR(255) COMMENT 'Coordinate system',
	WAT1_001 VARCHAR(255),
	WAT1_002 VARCHAR(255),
	WAT1_003 VARCHAR(255),
	WAT1_004 VARCHAR(255),
	WAT1_005 VARCHAR(255),
	WAT2_001 VARCHAR(255),
	WAT2_002 VARCHAR(255),
	WAT2_003 VARCHAR(255),
	WAT2_004 VARCHAR(255),
	WAT2_005 VARCHAR(255),
	KEY (ImageID)
) Type=InnoDB COMMENT='This table holds all of the information associated with each WCS model for Kitt Peak and CTIO 4m images.' ;


CREATE TABLE Object
(
	ObjectID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'ID number of Object.',
	AlgRunID BIGINT COMMENT 'ID of algorithm run that generated this Detection. Null if not a Detection.',
	ImageID BIGINT COMMENT 'ID of Image on which this Detection was found or this Missing Detection was not found. Null if not a Detection or a Missing Detection.',
	ObjName VARCHAR(50) COMMENT 'Source-specific identifier for this object. If from a reference catalog, then the object name in that catalog. If from a file of photometry results, then any idenitifier that algorithm outputs, else the number of the object in the file (e.g. 1 through # of objects in file).',
	Category TINYINT NOT NULL COMMENT 'The category of object. One of: -1: Missing source; 0: Reference object; 1: Source from an individual image; 2: Cluster of one or more child Objects. ',
	Class TINYINT COMMENT 'Classification: star or other unresolved object=0, galaxy or other resolved object=1, unknown=Null',
	OrigClass VARCHAR(50) COMMENT 'Classification as output by the photometry algorithm. The meaning depends on the photometry algorithm.',
	HTMID BIGINT NOT NULL COMMENT 'Hierarchical Triangular Mesh ID.',
	RA DOUBLE NOT NULL COMMENT 'J2000 right ascension (deg)',
	Decl DOUBLE NOT NULL COMMENT 'J2000 declination (deg). Note: named Decl because DEC is a reserved word in SQL.',
	UnitVecX DOUBLE NOT NULL COMMENT 'X component of unit vector representation of RA, Dec ',
	UnitVecY DOUBLE NOT NULL COMMENT 'Y component of unit vector representation of RA, Dec ',
	UnitVecZ DOUBLE NOT NULL COMMENT 'Z component of unit vector representation of RA, Dec ',
	CtrX FLOAT(0) NOT NULL COMMENT 'Centroid in pixels in x (colc).',
	CtrXErr FLOAT(0) COMMENT 'Uncertainty in Centroid X value.',
	CtrY FLOAT(0) NOT NULL COMMENT 'Centroid, in pixels in y (rowc).',
	CtrYErr FLOAT(0) COMMENT 'Unvertainty in centroid Y value.',
	PSFMag FLOAT(0) COMMENT 'PSF flux.',
	PSFMagErr FLOAT(0) COMMENT 'PSF flux error.',
	PetroMag FLOAT(0) COMMENT 'Petrosian flux.',
	PetroMagErr FLOAT(0) COMMENT 'Petrosian flux error.',
	ApDia FLOAT(0) COMMENT 'Diameter of aperture for ApMag, in pixels.',
	ApMag FLOAT(0) COMMENT 'Aperture magnitude.',
	ApMagErr FLOAT(0) COMMENT 'Uncertainty in aperature magnitude.',
	ModelMag FLOAT(0) COMMENT 'Model Flux.',
	ModelMagErr FLOAT(0) COMMENT 'Model Flux Uncertainty.',
	Sky FLOAT(0) COMMENT 'Sky flux.',
	SkyErr FLOAT(0) COMMENT 'Uncertainty in Sky Flux.',
	Ixx FLOAT(0) COMMENT 'Adaptive Second Moment 1.',
	IxxErr FLOAT(0) COMMENT 'Uncertainty in adaptive second moment Ixx.',
	Iyy FLOAT(0) COMMENT 'Adaptive Second Moment 2.',
	IyyErr FLOAT(0) COMMENT 'Uncertainty in adaptive second moment Iyy.',
	Ixy FLOAT(0) COMMENT 'Adaptive Second Moment 3.',
	IxyErr FLOAT(0) COMMENT 'Uncertainty in adaptive second moment Ixy.',
	Flags1 BIGINT COMMENT 'Error flags.',
	Flags2 BIGINT COMMENT 'More error flags, if relevant.',
	PSFChiSq FLOAT(0) COMMENT 'Likelyhood object is a star (0-1). SDSS calls this ''star_L''.',
	NumChildren INTEGER COMMENT 'Number of children this Object has. Only relevant for a cluster (in which case it must not be null).',
	ReferenceCatalog VARCHAR(50) COMMENT 'Name of the Reference Catalog from which this Object came. Null if not a Reference Object.',
	PRIMARY KEY (ObjectID),
	UNIQUE (ObjectID),
	KEY (AlgRunID),
	KEY (ImageID)
) Type=InnoDB COMMENT='This table will store ALL detections and Objects and clusters of Objects from each individual Image or Run.  The  Objects can be traced back their children and their corresponding Run and clustering information thorugh the association of this table with the TieParentObj2ChildObj table  and the TieDetectionRun2FitsImage table.' ;


CREATE TABLE PhotoPSFModel
(
	ImageAlgRunID BIGINT NOT NULL,
	PSP_FIELD_UNKNOWN INTEGER NOT NULL COMMENT 'this should never happen',
	PSP_FIELD_OK INTEGER NOT NULL COMMENT 'everything OK',
	PSP_FIELD_PSF22 INTEGER NOT NULL COMMENT 'forced to take linear PSF across field',
	PSP_FIELD_PSF11 INTEGER NOT NULL COMMENT 'forced to take constant PSF across field',
	PSP_FIELD_NOPSF INTEGER NOT NULL COMMENT 'forced to take default PSF',
	PSP_FIELD_ABORTED INTEGER NOT NULL COMMENT 'aborted processing',
	PSP_FIELD_MISSING INTEGER NOT NULL COMMENT 'missing (dummy) field ',
	PSP_FIELD_OE_TRANSIENT INTEGER NOT NULL COMMENT 'field with odd/even bias level transient',
	PSP_FIELD_STATUS_MASK INTEGER NOT NULL COMMENT 'ask defining which bits are used for status values; higher bits are available to be set with extra information ',
	PSP_FIELD_EXTENDED_KL VARCHAR(50) NOT NULL COMMENT 'Window for KL stars was extended (HEX value).',
	PSP_FIELD_SPARSE VARCHAR(50) NOT NULL COMMENT 'field is sparsely populated with KL stars (HEX value)',
	PSP_FIELD_MAX VARCHAR(50) NOT NULL COMMENT 'Maximum possible bit value in a +ve int (HEX value).',
	field INTEGER NOT NULL COMMENT 'Field sequence number within the run.',
	psp_status INTEGER NOT NULL COMMENT 'he maximum value of "status" over all 5 filters. FILTER',
	status INTEGER NOT NULL,
	sky FLOAT(0) NOT NULL COMMENT 'The average sky value in the frame.',
	skySig FLOAT(0) NOT NULL COMMENT 'Sigma of distribution of sky values.',
	skyErr FLOAT(0) NOT NULL COMMENT 'The average sky value in the frame. (error)',
	skySlope FLOAT(0) NOT NULL COMMENT 'The slope in the sky value along the columns.',
	lbias FLOAT(0) NOT NULL COMMENT 'Left-hand bias level.',
	rbias FLOAT(0) NOT NULL COMMENT 'Right-hand bias level.',
	psf_nstar INTEGER NOT NULL COMMENT 'Number of stars used in psf measurement.',
	psf_ap_correctionErr FLOAT(0) NOT NULL COMMENT 'Photometric error due to imperfect PSF model',
	psf_sigma1 FLOAT(0) NOT NULL COMMENT 'Inner gaussian sigma for the composite fit',
	psf_sigma2 FLOAT(0) NOT NULL COMMENT 'Outer gaussian sigma for the composite fit',
	psf_b FLOAT(0) NOT NULL COMMENT 'Ratio of the inner PSF to the outer PSF at the ',
	psf_p0 FLOAT(0) NOT NULL COMMENT 'The value of the power law at the origin.',
	psf_beta FLOAT(0) NOT NULL COMMENT 'Slope of power law.',
	psf_sigmap FLOAT(0) NOT NULL COMMENT 'Width parameter for power law.',
	psf_width FLOAT(0) NOT NULL COMMENT 'Effective PSF width, based on 2-Gaussian fit',
	psf_psfCounts FLOAT(0) NOT NULL COMMENT 'Flux via fit to the PSF.',
	psf_sigma1_2G FLOAT(0) NOT NULL,
	psf_sigma2_2G FLOAT(0) NOT NULL,
	psf_b_2G FLOAT(0) NOT NULL COMMENT 'Ratio of gaussian 2 to gaussian 1 at origin',
	psfCounts FLOAT(0) NOT NULL,
	prof_nprof INTEGER NOT NULL COMMENT 'Number of profile bins.',
	prof_med FLOAT(0) NOT NULL,
	prof_sig FLOAT(0) NOT NULL,
	gain FLOAT(0) NOT NULL COMMENT 'Gain averaged over all amplifiers.',
	dark_variance VARCHAR(0) NOT NULL COMMENT 'Dark variance? (is this a number or character (y,n?))???',
	UNIQUE (ImageAlgRunID),
	KEY (ImageAlgRunID)
) Type=InnoDB COMMENT='Simplified PSF Model for PHOTO (double gausian approximation).  The parameters for this tablecome from the psField.par file in PHOTO.' ;


CREATE TABLE PipelineRun
(
	PipelineRunID BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Unique identification number associated with the pipeline configuration for the Run that produced the values for this Detection/Object/Object_Cluster.',
	PipelineName VARCHAR(50) COMMENT 'Name of the pipeline used for this Run. This will likely be either PHOTPIPE (SM/W pipeline) or PHOTO (SDSS pipeline).',
	PipelineVersion VARCHAR(50) COMMENT 'Version of the pipeline used in this Run.',
	StartDate DATETIME COMMENT 'Start UTC date and time.',
	Comments VARCHAR(255) COMMENT 'Notes, if any, about the pipeline run.',
	CmdLine VARCHAR(255) COMMENT 'Command line that initiated the pipeline run.',
	PRIMARY KEY (PipelineRunID),
	UNIQUE (PipelineRunID)
) Type=InnoDB COMMENT='This table holds all of the relevant information for each individual pipeline Run. ' ;


CREATE TABLE TangentWCS
(
	ImageID BIGINT NOT NULL COMMENT 'Each Image has a WCS in this table which can be tracked using the ImageID.  ',
	RADESYS VARCHAR(5) COMMENT 'RA/Dec coordinate system - either FK5 or ICRS.',
	Equinox FLOAT(0) COMMENT 'Date of equinox of coordinate system (if not ICRS)',
	CTYPE1 VARCHAR(50) COMMENT 'WCS projection type for this axis.',
	CUNIT VARCHAR(5) COMMENT 'Axis unit.',
	CRVAL1 DOUBLE COMMENT 'World coordinate on this axis.',
	CRPIX1 DOUBLE COMMENT 'Reference pixel on this axis.',
	CDELT1 DOUBLE COMMENT 'Pixel step along this axis.',
	CD1_1 DOUBLE COMMENT 'Linear projection matrix.',
	CD1_2 DOUBLE COMMENT 'Linear projection matrix.',
	CTYPE2 VARCHAR(255) COMMENT 'WCS projection type for this axis.',
	CUNIT2 VARCHAR(255) COMMENT 'Axis unit.',
	CRVAL2 DOUBLE COMMENT 'World coordinate on this axis.',
	CRPIX2 DOUBLE COMMENT 'Reference pixel on this axis.',
	CDELT2 DOUBLE COMMENT 'Pixel step along this axis.',
	CD2_1 DOUBLE COMMENT 'Linear projection matrix.',
	CD2_2 DOUBLE COMMENT 'Linear projection matrix.',
	KEY (ImageID)
) Type=InnoDB COMMENT='WCS information for a tangent projection, e.g. as produced by SWARP or WCSREMAP.' ;


CREATE TABLE TieClusterToObject
(
	ChildID BIGINT NOT NULL COMMENT 'ObjectID of child Object.',
	ClusterID BIGINT NOT NULL COMMENT 'ObjectID of Cluster',
	KEY (ChildID),
	KEY (ClusterID)
) Type=InnoDB COMMENT='This table relates Clusters to child Objects (which may be any kind of object including other Clusters). 
 Populated by a Clustering Run. 
 We can use this table to determine which child Objects comprise a given Cluster and visa versa.' ;


CREATE TABLE TieImageToAlgRun
(
	ImageAlgRunID BIGINT NOT NULL AUTO_INCREMENT,
	ImageID BIGINT NOT NULL COMMENT 'Unique identification number of the information from each Image header.',
	AlgRunID BIGINT NOT NULL COMMENT 'ID of pipeline Run.',
	WasInput BOOL NOT NULL COMMENT 'Was this an input image? (true-input, false=output)',
	NumDetectionsFound BIGINT COMMENT 'Number of Detections found on this image. This is duplicate info, but allows us to throw away Detections and still retain the info.',
	NumArtifactsRejected BIGINT COMMENT 'The number of artifacts rejected on this run. Null if this info is not available from the Object Detection Algorithm.',
	ElapsedSec FLOAT(0) COMMENT 'Elapsed clock time (seconds) to execute the algorithm on this image.',
	PSFModelTable VARCHAR(50) COMMENT 'Name of table that contains the PSF model for this particular photometry run of this particular image. Null if irrelevant (e.g. not a photometry run or an algorithm that has no psf model).',
	PRIMARY KEY (ImageAlgRunID),
	UNIQUE (ImageAlgRunID),
	KEY (AlgRunID),
	KEY (ImageID)
) Type=InnoDB COMMENT='This table holds the relationship between an image and an algorithm that used the image.' ;






--  Create Foreign Key Constraints 
ALTER TABLE AlgRun ADD CONSTRAINT FK_AlgRun_PipelineRun 
	FOREIGN KEY (PipelineRunID) REFERENCES PipelineRun (PipelineRunID) ;

ALTER TABLE APO2_5mWCS ADD CONSTRAINT FK_APO2_5mWCS_Image 
	FOREIGN KEY (ImageID) REFERENCES Image (ImageID) ;

ALTER TABLE DaophotPSFModel ADD CONSTRAINT FK_DaophotPSFModel_TieImageToAlgRun 
	FOREIGN KEY (ImageAlgRunID) REFERENCES TieImageToAlgRun (ImageAlgRunID) ;

ALTER TABLE DophotPSFModel ADD CONSTRAINT FK_DophotPSFModel_TieImageToAlgRun 
	FOREIGN KEY (ImageAlgRunID) REFERENCES TieImageToAlgRun (ImageAlgRunID) ;

ALTER TABLE MSO50inWCS ADD CONSTRAINT FK_MSO50inWCS_Image 
	FOREIGN KEY (ImageID) REFERENCES Image (ImageID) ;

ALTER TABLE NOAO4mWCS ADD CONSTRAINT FK_NOAO4mWCS_Image 
	FOREIGN KEY (ImageID) REFERENCES Image (ImageID) ;

ALTER TABLE Object ADD CONSTRAINT FK_Object_AlgRun 
	FOREIGN KEY (AlgRunID) REFERENCES AlgRun (AlgRunID) ;

ALTER TABLE Object ADD CONSTRAINT FK_Object_Image 
	FOREIGN KEY (ImageID) REFERENCES Image (ImageID) ;

ALTER TABLE PhotoPSFModel ADD CONSTRAINT FK_PhotoPSFModel_TieImageToAlgRun 
	FOREIGN KEY (ImageAlgRunID) REFERENCES TieImageToAlgRun (ImageAlgRunID) ;

ALTER TABLE TangentWCS ADD CONSTRAINT FK_TangentWCS_Image 
	FOREIGN KEY (ImageID) REFERENCES Image (ImageID) ;

ALTER TABLE TieClusterToObject ADD CONSTRAINT FK_TieClusterChildToObject_Object 
	FOREIGN KEY (ChildID) REFERENCES Object (ObjectID) ;

ALTER TABLE TieClusterToObject ADD CONSTRAINT FK_TieClusterClusterToObject_Object 
	FOREIGN KEY (ClusterID) REFERENCES Object (ObjectID) ;

ALTER TABLE TieImageToAlgRun ADD CONSTRAINT FK_TieImageToAlgRun_AlgRun 
	FOREIGN KEY (AlgRunID) REFERENCES AlgRun (AlgRunID) ;

ALTER TABLE TieImageToAlgRun ADD CONSTRAINT FK_TieImageToAlgRun_Images 
	FOREIGN KEY (ImageID) REFERENCES Image (ImageID) ;
